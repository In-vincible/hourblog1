# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2018-02-06 09:45
from __future__ import unicode_literals

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('authorId', models.AutoField(primary_key=True, serialize=False)),
                ('authorName', models.CharField(max_length=100)),
                ('aboutAuthor', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryId', models.AutoField(primary_key=True, serialize=False)),
                ('categoryTitle', models.CharField(max_length=100)),
                ('slug', models.SlugField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postId', models.AutoField(primary_key=True, serialize=False)),
                ('postTitle', models.CharField(max_length=500)),
                ('content', ckeditor.fields.RichTextField()),
                ('viewCount', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devohack.Author')),
                ('category', models.ManyToManyField(to='devohack.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tagId', models.AutoField(primary_key=True, serialize=False)),
                ('tagTitle', models.CharField(max_length=100)),
                ('slug', models.SlugField(null=True)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='tag',
            field=models.ManyToManyField(to='devohack.Tag'),
        ),
    ]
